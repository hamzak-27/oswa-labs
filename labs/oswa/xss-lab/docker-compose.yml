version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: oswa-xss-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: xss_lab_2024
      MONGO_INITDB_DATABASE: xsslab
    volumes:
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - xss_mongo_data:/data/db
    networks:
      - xss-network
    ports:
      - "27017:27017"

  # Node.js Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: oswa-xss-backend
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://admin:xss_lab_2024@mongodb:27017/xsslab?authSource=admin
      - JWT_SECRET=vulnerable_jwt_secret_2024
      - SESSION_SECRET=xss_session_secret_key
      - ADMIN_PASSWORD=admin123
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - xss-network
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    command: npm run dev

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: oswa-xss-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - xss-network
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm start

  # Admin Bot (Simulates admin user visiting pages)
  admin-bot:
    build:
      context: ./admin-bot
      dockerfile: Dockerfile
    container_name: oswa-xss-admin-bot
    environment:
      - FRONTEND_URL=http://frontend:3000
      - BACKEND_URL=http://backend:5000
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - BOT_INTERVAL=30000
    networks:
      - xss-network
    depends_on:
      - frontend
      - backend
    volumes:
      - ./admin-bot:/app
      - /app/node_modules

  # Nginx Reverse Proxy (Optional - combines all services)
  nginx:
    image: nginx:alpine
    container_name: oswa-xss-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - xss-network
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

networks:
  xss-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  xss_mongo_data:

# Health checks and restart policies
x-healthcheck: &healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s